package Preloader
import NoWurst
import ErrorHandling
import Group
import DummyRecycler
import ObjectIds
import Basics
import ClosureTimers
import ClosureForGroups

/* Helps you to preload units and abilities during map-load	*
 * to avoid first-laggs. */

/** Whether to finish preloading automatically */
@configurable constant autoFinish = true
var dumg = CreateGroup()
unit dum

/** Preloads the given abilitytype */
public function preloadAbility(int abilId) returns boolean
	dum.addAbility(abilId)
	var result = true
	if dum == null 
		error("Do not load abilities after map init when autoFinish = true")
	else if not dum.hasAbility(abilId)
		Log.trace("PreloadAbility: Ability " + abilId.toRawCode() + " does not exist.")
		result = false
	return result

/** Preloads the given unittype */
public function preloadUnit(int unitId) returns boolean
	if dumg == null 
		error("PreloadUnit: Group dumg does not exist")
	let u = createUnit(DUMMY_PLAYER, unitId, vec2(0,0), angle(0))
	dumg.addUnit(u)
	return u.isAlive()

/** If autoFinish is false you need to call this function manually */
public function finishPreload()
	dum.remove()
	dumg.forEachFrom((unit u) -> u.remove())
	dumg.destr()
	dumg = null

init
	dum = createUnit(DUMMY_PLAYER, DUMMY_UNIT_ID, vec2(0,0), angle(0))
	if dum == null
		error("DUMMY_UNITID (" + DUMMY_UNIT_ID.toRawCode() + ") not added correctly to the map.")
	if autoFinish
		nullTimer(() -> finishPreload())
